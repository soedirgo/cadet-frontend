{"version":3,"sources":["../node_modules/sourceror/wasm/source_compiler.js","../node_modules/sourceror/wasm/source_compiler_bg.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","addHeapObject","obj","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","__wbg_adapter_12","arg0","arg1","arg2","compile","context","source_code","ptr0","len0","__wbindgen_object_drop_ref","__wbg_new_bb4e44ef089e45b4","state0","a","b","Promise","arg3","__wbg_adapter_15","__wbindgen_cb_drop","original","cnt","__wbg_sourcerorLogCallback_9555c6dd7a1fa2a1","arg4","arg5","arg6","arg7","arg8","arg9","sourcerorLogCallback","__wbindgen_memory","__wbg_buffer_3f12a1c608c6d04e","__wbg_newwithbyteoffsetandlength_4c51342f87299c5a","__wbg_new_c6c0228e6d22a2f9","__wbg_newwithlength_a429e08f8a8fe4b3","__wbg_call_bf745b1758bb6693","f","call","apply","this","arguments","e","__wbg_sourcerorFetchDepCallback_056becf738f1469a","sourcerorFetchDepCallback","__wbg_then_0f957e0f4c3e537a","then","__wbindgen_string_get","x","__wbindgen_throw","Error","__wbg_then_dd3785597974798a","__wbg_resolve_6e61e640925a0db9","resolve","__wbindgen_closure_wrapper985","dtor","state","real","args","get","makeMutClosure"],"mappings":"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","file":"static/js/3.134702e5.chunk.js","sourcesContent":["import * as wasm from \"./source_compiler_bg.wasm\";\nexport * from \"./source_compiler_bg.js\";","import * as wasm from './source_compiler_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_12(arg0, arg1, arg2) {\n    wasm.wasm_bindgen__convert__closures__invoke1_mut__h5a38035ec9f3a5d3(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\nfunction __wbg_adapter_15(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h5293563f9bd8daff(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*\n* * The entry function for compilation.\n* * `context` is an opaque value so that the host code can associate our calls to compiler_log() with the correct call to compile().\n* * `source_code`: ESTree JSON representation of validated program\n* * `import_spec`: list of imports following the import file format\n*\n* @param {number} context\n* @param {string} source_code\n* @returns {any}\n*/\nexport function compile(context, source_code) {\n    var ptr0 = passStringToWasm0(source_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.compile(context, ptr0, len0);\n    return takeObject(ret);\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_new_bb4e44ef089e45b4 = function(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_15(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        var ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nexport const __wbindgen_cb_drop = function(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    var ret = false;\n    return ret;\n};\n\nexport const __wbg_sourcerorLogCallback_9555c6dd7a1fa2a1 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n    try {\n        sourcerorLogCallback(arg0, arg1, getStringFromWasm0(arg2, arg3), arg4, arg5, arg6, arg7, getStringFromWasm0(arg8, arg9));\n    } finally {\n        wasm.__wbindgen_free(arg8, arg9);\n    }\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_buffer_3f12a1c608c6d04e = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_newwithbyteoffsetandlength_4c51342f87299c5a = function(arg0, arg1, arg2) {\n    var ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_c6c0228e6d22a2f9 = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_newwithlength_a429e08f8a8fe4b3 = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_call_bf745b1758bb6693 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_sourcerorFetchDepCallback_056becf738f1469a = function(arg0, arg1, arg2) {\n    try {\n        var ret = sourcerorFetchDepCallback(arg0, getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    } finally {\n        wasm.__wbindgen_free(arg1, arg2);\n    }\n};\n\nexport const __wbg_then_0f957e0f4c3e537a = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbg_then_dd3785597974798a = function(arg0, arg1) {\n    var ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_resolve_6e61e640925a0db9 = function(arg0) {\n    var ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_closure_wrapper985 = function(arg0, arg1, arg2) {\n    var ret = makeMutClosure(arg0, arg1, 38, __wbg_adapter_12);\n    return addHeapObject(ret);\n};\n\n"],"sourceRoot":""}